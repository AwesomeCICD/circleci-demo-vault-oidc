# Deployment secrets are pathed, so we use use env var to understand if they were exposed,
{{$appenv := env "APP_ENV"}}
{{ if $appenv }}
    # and if so use the env-specific secret path
    {{$apppath := printf "secret/cluster/app-pipeline-%s" $appenv}}
    {{ with secret $apppath }}
        export K8S_TOKEN="{{ .Data.data.token }}"
        export K8S_CERT="{{ .Data.data.cert }}"
        export K8S_USER={{ .Data.data.user }}
        export K8S_NAMESPACE={{ .Data.data.namespace }}
        export K8S_CLUSTER={{ .Data.data.cluster }}
        export K8S_URL="{{ .Data.data.url }}"

        # Repeated block with `export > bash_env` allows future steps to use these values.
        echo "export K8S_TOKEN=\"{{ .Data.data.token }}\"" >> $BASH_ENV
        echo "export K8S_CERT=\"{{ .Data.data.cert }}\"" >> $BASH_ENV
        echo "export K8S_USER={{ .Data.data.user }}" >> $BASH_ENV
        echo "export K8S_NAMESPACE={{ .Data.data.namespace }}" >> $BASH_ENV
        echo "export K8S_CLUSTER={{ .Data.data.cluster }}" >> $BASH_ENV
        echo "export K8S_URL=\"{{ .Data.data.url }}\"" >> $BASH_ENV
    {{ end }}
{{ end }}


## Nexus Credentials (not pathed, always the same)
{{ with secret "secret/nexus/app-deployer" }}
    export DOCKER_LOGIN="{{ .Data.data.username }}"
    export DOCKER_PWD="{{ .Data.data.password }}"
    echo "export DOCKER_LOGIN=\"{{ .Data.data.username }}\"" >> $BASH_ENV
    echo "export DOCKER_PWD=\"{{ .Data.data.password }}\"" >> $BASH_ENV
{{ end }}